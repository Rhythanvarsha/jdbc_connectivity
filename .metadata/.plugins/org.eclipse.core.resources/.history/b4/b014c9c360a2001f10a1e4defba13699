package service;

import database.DatabaseConnection;
import model.Participant;
import model.Quiz;
import model.Question;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class QuizServiceImpl implements QuizService {

    @Override
    public void registerParticipant(Participant participant) {
        try (Connection connection = DatabaseConnection.getConnection()) {
            String sql = "INSERT INTO Participants (name, email) VALUES (?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, participant.getName());
            statement.setString(2, participant.getEmail());
            statement.executeUpdate();
            System.out.println("Participant registered successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void addQuiz(Quiz quiz) {
        try (Connection connection = DatabaseConnection.getConnection()) {
            String sql = "INSERT INTO Quiz (title, description) VALUES (?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, quiz.getTitle());
            statement.setString(2, quiz.getDescription());
            statement.executeUpdate();
            System.out.println("Quiz added successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void addQuestion(Question question) {
        try (Connection connection = DatabaseConnection.getConnection()) {
            String sql = "INSERT INTO Questions (quiz_id, question_text, question_type, correct_answer) VALUES (?, ?, ?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setInt(1, question.getQuizId());
            statement.setString(2, question.getQuestionText());
            statement.setString(3, question.getQuestionType());
            statement.setString(4, question.getCorrectAnswer());
            statement.executeUpdate();
            System.out.println("Question added successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void takeQuiz(Participant participant, int quizId) {
        try (Connection connection = DatabaseConnection.getConnection()) {
            String fetchQuestionsSql = "SELECT question_id, question_text, correct_answer FROM Questions WHERE quiz_id = ?";
            PreparedStatement fetchQuestionsStatement = connection.prepareStatement(fetchQuestionsSql);
            fetchQuestionsStatement.setInt(1, quizId);
            ResultSet resultSet = fetchQuestionsStatement.executeQuery();

            int score = 0;
            Scanner scanner = new Scanner(System.in);

            System.out.println("Starting Quiz...");
            while (resultSet.next()) {
                int questionId = resultSet.getInt("question_id");
                String questionText = resultSet.getString("question_text");
                String correctAnswer = resultSet.getString("correct_answer");

                System.out.println(questionText);
                System.out.print("Your answer: ");
                String userAnswer = scanner.nextLine();

                if (userAnswer.equalsIgnoreCase(correctAnswer)) {
                    score++;
                }
            }

            String insertResultSql = "INSERT INTO QuizResults (participant_id, quiz_id, score) VALUES (?, ?, ?)";
            PreparedStatement insertResultStatement = connection.prepareStatement(insertResultSql);
            insertResultStatement.setInt(1, participant.getParticipantId());
            insertResultStatement.setInt(2, quizId);
            insertResultStatement.setInt(3, score);
            insertResultStatement.executeUpdate();

            System.out.println("Quiz completed. Your score: " + score);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void viewScore(Participant participant) {
        try (Connection connection = DatabaseConnection.getConnection()) {
            String sql = "SELECT Quiz.title, QuizResults.score FROM QuizResults INNER JOIN Quiz ON QuizResults.quiz_id = Quiz.quiz_id WHERE participant_id = ?";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setInt(1, participant.getParticipantId());
            ResultSet resultSet = statement.executeQuery();

            System.out.println("Quiz Results:");
            while (resultSet.next()) {
                String quizTitle = resultSet.getString("title");
                int score = resultSet.getInt("score");
                System.out.println("Quiz: " + quizTitle + " | Score: " + score);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}